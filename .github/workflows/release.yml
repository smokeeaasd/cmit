name: Release

on:
  push:
    tags:
      - 'v*.*.*'  # dispara apenas em tags sem√¢nticas

jobs:
  release:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v5

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.25.1'

      # Build Linux binary
      - name: Build Linux binary
        run: |
          mkdir -p dist/linux
          GOOS=linux GOARCH=amd64 go build -ldflags="-X main.Version=${GITHUB_REF_NAME}" -o dist/linux/cmit ./cmd/cmit
          zip -j dist/cmit-linux.zip dist/linux/cmit
          echo "Built Linux binary and created dist/cmit-linux.zip"

      # Build macOS binary
      - name: Build macOS binary
        run: |
          mkdir -p dist/macos
          GOOS=darwin GOARCH=amd64 go build -ldflags="-X main.Version=${GITHUB_REF_NAME}" -o dist/macos/cmit ./cmd/cmit
          zip -j dist/cmit-macos.zip dist/macos/cmit
          echo "Built macOS binary and created dist/cmit-macos.zip"

      # Build Windows binary
      - name: Build Windows binary
        run: |
          mkdir -p dist/windows
          GOOS=windows GOARCH=amd64 go build -ldflags="-X main.Version=${GITHUB_REF_NAME}" -o dist/windows/cmit.exe ./cmd/cmit
          zip -j dist/cmit-windows.zip dist/windows/cmit.exe
          echo "Built Windows binary and created dist/cmit-windows.zip"

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        if: github.ref_type == 'tag'
        with:
          files: |
            dist/cmit-linux.zip
            dist/cmit-macos.zip
            dist/cmit-windows.zip
          name: Release ${{ github.ref_name }}
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.PAT_TOKEN }}
